import &ArtSuite

class ColorElement extends Component

  @stateFields height: 160
  @propFields :hue :key

  click: -> @height = if @height == 320 then 160 else 320

  render: ->
    Element
      size:     ww: 1 h: @height
      key:      @key
      on:       pointerClick: @click
      animators: :size

      RectangleElement color: hslColor @hue, 1, 1
      TextElement
        :centerCenter
        :childrenSize
        fontSize: 128
        color:    #0007
        text:     "" #{round @hue * 360}Â°

class ColorScrollerContents extends Component

  getInitialState: ->
    focusedPageIndex: 0
    pageSpread: 0
    handlers:
      preprocess:
        scrollUpdate: ({props}) ->
          {focusedPage, currentGeometry} = props
          focusedPageIndex: focusedPage.key | 0
          pageSpread:       currentGeometry.suggestedPageSpread
      scrollUpdate:   (stateUpdate) -> @setState stateUpdate

  render: ->
    {focusedPageIndex, pageSpread, handlers} = @state
    firstPageIndex = max(0, focusedPageIndex - pageSpread)
    lastPageIndex = focusedPageIndex + pageSpread

    PagingScrollElement
      padding:  5
      scroll:   :vertical
      on:       handlers
      array pageIndex from firstPageIndex  to lastPageIndex by 1
        ColorElement key: pageIndex, hue: modulo pageIndex / 24, 1

class ColorScroller extends Component

  render: ->
    Element
      RectangleElement color: #333
      ColorScrollerContents()
