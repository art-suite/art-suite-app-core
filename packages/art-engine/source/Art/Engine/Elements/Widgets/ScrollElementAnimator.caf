import &StandardImport, &Animation
animatorBreakingFriction = 3
animatorOutOfBoundsBreakingFriction = 15
animatorSpringConstant = 200
animatorSpringFriction = 25

class ScrollElementAnimator extends PersistantAnimator

  constructor: (__, options)->
    @_scrollElement = options.scrollElement
    @_velocity  = 0
    @_springConstant = 0
    @_frictionConstant = 0

  @property
    :springConstant
    :frictionConstant
    :velocity

  @getter
    :scrollElement
    tracking:     -> floatEq0 @_frictionConstant
    hasSpring:    -> !floatEq0 @_springConstant
    hasVelocity:  -> !floatEq0 @velocity
    active: ->
      @hasVelocity
      || @hasSpring &&
        @currentValue != @toValue

    velocityIsSlow: -> absLte @_velocity, 60 # less than 1 pixel per frame @ 60fps
    scrollPosition: ->          @scrollElement.scrollPosition ? 0
    inspectedObjects: ->
      ScrollElementAnimator: {}
        scrollElement: @scrollElement.inspectedName
        @velocity, @springConstant, @frictionConstant
        @scrollPosition

  @setter
    scrollPosition: (v) ->
      @scrollElement.scrollPosition = v

  freeze: ->
    if @active
      @_velocity = @_springConstant = @_frictionConstant = 0
      v = @scrollPosition
      @scrollPosition = @_toValue = v # this actually tells ArtEngine where we are is where we want to be
      @_deactivate()

  boundSp: (scrollPosition) ->  @scrollElement.boundSp scrollPosition

  addVelocity: (v) ->
    @velocity += v
    @springConstant   = 0
    @frictionConstant = animatorBreakingFriction
    @scrollPosition += 10 # any change just to trigger the animation

  animateToValidScrollPosition: (scrollPosition = @scrollPosition) ->
    @springConstant   = animatorSpringConstant
    @frictionConstant = animatorSpringFriction
    @scrollPosition = @_toValue = @boundSp scrollPosition

  _stop: ->
    @velocity = @springConstant = @frictionConstant = 0
    super

  animate: ->
    @ extract
      springConstant
      frictionConstant
      tracking
      frameSeconds
      toValue as targetScrollPosition
      currentValue as scrollPosition

    frameSeconds = min frameSeconds, 1/15 # stop things from getting too crazy

    if tracking
      @stop()

    else
      @ extract velocityIsSlow
      # PHYSICS
      scrollPositionValid = float32Eq
        scrollPosition
        boundScrollPosition = @boundSp scrollPosition

      if !@hasSpring && !scrollPositionValid
        # out of bounds, slow down!
        frictionConstant = animatorOutOfBoundsBreakingFriction

      acceleration =
        @_velocity * -frictionConstant +
          targetScrollPosition - scrollPosition
          * springConstant

      @_velocity      += acceleration * frameSeconds
      scrollPosition  += @_velocity   * frameSeconds

      if @velocityIsSlow
        if @hasSpring
          if 1 >= abs scrollPosition - targetScrollPosition
            # stop if slow and within 1 pixel of the targetScrollPosition
            scrollPosition = @stop()

        else
          if !scrollPositionValid
            # went past the end, attach the spring to the boundScrollPosition and "animate to valid scrollPosition"
            @animateToValidScrollPosition scrollPosition

          else @stop()

      scrollPosition
