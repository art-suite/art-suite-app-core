import &StandardImport

suite: ->
  renderTest
    "elementSpaceDrawArea should include descender"
    render: -> TextElement text: "Descending", layoutMode: "textualBaseline", size: cs: 1
    test: (root) ->
      assert.within root.currentSize, point(75, 12), point(76, 12)
      assert.within
        root.elementSpaceDrawArea
        rect -8, -8, 91, 32
        rect -8, -8, 92, 32

  renderTest
    "change in text size should affect children layout"
    render: -> TextElement
      text: "D"
      fontSize: 60
      size: cs: 1
      RectangleElement color: "red"
      FillElement()

    test: (element, testName) ->
      [__, child] = element.children
      assert.eq
        firstPassSize = element.currentSize
        child.currentSize
        "test 1"
      element.text = "!"
      element.toBitmapBasic()
      .then (bitmap) ->
        log bitmap, testName, {firstPassSize, currentSize: element.currentSize}
        assert.neq element.currentSize, firstPassSize
        assert.eq element.currentSize, child.currentSize, "test 2"

  renderTest
    "tight layoutMode"
    stagingBitmapsCreatedShouldBe: 0
    render: ->
      Element
        size: cs:1
        RectangleElement color:"#ff7"
        TextElement text:"test", layoutMode:"tight", fontSize:50

    test: (element) ->
      assert.within
        element.currentSize
        point 72, 32
        point 72, 33
