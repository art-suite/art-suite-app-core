import &ArtSuite

class DarkJedi extends FluxModel

  loadData: (key) ->
    aborted = false

    @updateFluxStore key, status: pending, abort: ->
      # simulate abort
      aborted = true
      log.warn "DarkJedi: abort: #{key}"

    # simulate remote async request
    log "DarkJedi: pending: #{key}..."
    timeout 500 intRand 500
    .then ->
      unless aborted
        # simulate successful load
        log "DarkJedi: loaded: #{key}"
        &Data/DarkJedi[key]

  toKeyString: (a) -> "#{a}"

  fluxStoreEntryRemoved: (entry) ->
    entry.fluxRecord.abort?()
