import &ArtSuite # 2 tokens | 246 tokens in total

textStyle =                         # 11 tokens
  fontFamily: "" "Century Gothic", Futura, sans-serif
  fontSize:   14
  margin:     10
  size:       cs: 1
                                    # 9 tokens
cellStyle = merge textStyle, fontWeight: :bold fontSize: 18

calculateWinner = (board) ->        # 61 tokens
  find [i1, i2, i3] in
      0 1 2
      3 4 5
      6 7 8
      0 3 6
      1 4 7
      2 5 8
      0 4 8
      2 4 6
    (v1 = board[i1]) == board[i2] && v1 == board[i3] && v1

class Square extends Component      # 27 tokens
  render: ->
    Element
      size: 35
      draw: outline:      :black
      on:   pointerClick: @props.play
      TextElement
        cellStyle
        size:   ps: 1
        align:  .5
        @props.cell

class TicTacToe extends Component   # 136 tokens
  @stateFields stepNumber: 0 history: [] Array(9).fill null

  play: (i, player) ->
    @history = arrayWith
      @history.slice 0, @stepNumber + 1
      arrayWithElementReplaced @history[@stepNumber++], player, i

  render: ->
    winner = calculateWinner board = @history[@stepNumber]
    player = [:X :O][@stepNumber % 2]
    Element
      size:           w: 125
      padding:        10
      childrenLayout: :flow

      array cell, i in board
        Square {} cell, play: ->
          @play i, player unless winner || board[i]

      TextElement
        textStyle
        if winner then  "" Winner: #{winner}
        else            "" Next player: #{player}

      array {label}, i in @history
        TextElement
          textStyle
          on: pointerClick: -> @stepNumber = i
          if i then "" Go to move ##{i}
          else      "" Go to game start
