import &StandardImport

deMarkdownTest = (str, out) ->
  test "deMarkdown #{escapeJavascriptString(str).slice(0,50)}" ->
    assert.eq
      deMarkdown str
      out

suite:
  removeMarkdownCodeBlocks: ->
    test "a" ->
      assert.eq
        removeMarkdownCodeBlocks
          """
            hi
            ```
            removed
            ```
            bye
        """
          hi
          bye

  splitMarkdownParagraphs: ->
    testSplitMarkdownParagraphs = (str, out) ->
      test "splitMarkdownParagraphs #{escapeJavascriptString(str).slice(0,50)}" ->
        first = splitMarkdownParagraphs str
        # second = splitMarkdownParagraphs first.join "\n\n"
        # assert.eq
        #   first
        #   second
        #   "splitMarkdownParagraphs should be (nearly) idempotent ( f(f(x).join '\n\n') = f(x) )"
        assert.eq
          first
          out

    testSplitMarkdownParagraphs
      "  a  "
      [] "a"

    testSplitMarkdownParagraphs
      """
        a
        b
      [] "a b"

    testSplitMarkdownParagraphs
      """
        # a
        b
      []
        "# a b"

    testSplitMarkdownParagraphs
      """
        a

        b

      [] :a :b

    testSplitMarkdownParagraphs
      """
        a




        b

      [] :a :b


    testSplitMarkdownParagraphs
      """
        a
        > b
        c
      []
        :a
        "> b c"

    testSplitMarkdownParagraphs
      """
        a
        - b

      [] :a "- b"

    testSplitMarkdownParagraphs
      """
        a

        ```
          b
          c
        ```

      []
        :a
        """
          ```
            b
            c
          ```

    testSplitMarkdownParagraphs
      """
        #-- To Autumn
        >--
          Season of mists and mellow fruitfulness,
          Close bosom-friend of the maturing sun;

      []
        "" #-- To Autumn
        "" >-- Season of mists and mellow fruitfulness, Close bosom-friend of the maturing sun;


    testSplitMarkdownParagraphs
      """
        Code For Life
        ```
        just some code
        ```
        1. Example 1
        ^```
        def
            small:
              h1Style:        TextStyles.xLargeBoldText
              h2Style:        TextStyles.largeBoldText
              h3Style:        TextStyles.mediumBoldText
              paragraphStyle: TextStyles.mediumText
              l1Style:        TextStyles.mediumText
              l2Style:        TextStyles.smallText
              l3Style:        TextStyles.smallText
              quoteStyle:     TextStyles.mediumItalicText
              monoStyle:      TextStyles.smallMonospaceText
        ```

        2.. Example 2
        ^^```
        abc
            small:
              h1Style:        TextStyles.xLargeBoldText
              h2Style:        TextStyles.largeBoldText
              h3Style:        TextStyles.mediumBoldText
              paragraphStyle: TextStyles.mediumText
        ```

      []

        "Code For Life"
        """
          ```
          just some code
          ```

        "1. Example 1"
        """
          ^```
          def
              small:
                h1Style:        TextStyles.xLargeBoldText
                h2Style:        TextStyles.largeBoldText
                h3Style:        TextStyles.mediumBoldText
                paragraphStyle: TextStyles.mediumText
                l1Style:        TextStyles.mediumText
                l2Style:        TextStyles.smallText
                l3Style:        TextStyles.smallText
                quoteStyle:     TextStyles.mediumItalicText
                monoStyle:      TextStyles.smallMonospaceText
          ```

        "2.. Example 2"
        """
          ^^```
          abc
              small:
                h1Style:        TextStyles.xLargeBoldText
                h2Style:        TextStyles.largeBoldText
                h3Style:        TextStyles.mediumBoldText
                paragraphStyle: TextStyles.mediumText
          ```




  deMarkdown: ->
    deMarkdownTest :foo, :foo
    deMarkdownTest "# foo", :foo
    deMarkdownTest "#    foo", :foo
    deMarkdownTest "#- foo", :foo
    deMarkdownTest "> foo", :foo
    deMarkdownTest "* foo", :foo
    deMarkdownTest "1. foo", :foo
