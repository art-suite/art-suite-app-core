import &StandardImport, &Widgets

class Page extends ViewStateComponent
  @subscriptions
    :pageStack

  @propFields
    :component
    :pageStackIndex
    :hideTitle
    :title

  preprocessProps: (props) ->
    if props.visible
      @models.appKitPresentationState.statusBarStyle = props.statusBarStyle ? :light
    props

  render: ->
    @viewState extract buttonSize, gridSize

    Element
      :column
      {visible} = @props
      draw: :white

      animators:
        visible:  duration: .125
        opacity:  duration: .125 toFrom:   0
        location: duration: .125 toFrom: x: gridSize * 3

      location: x: if visible then 0 else -gridSize * 3

      unless @hideTitle || @viewState.wideLayout
        @props extract title

        Element
          size: h: buttonSize
          draw:
            padding:
              top: -@safePadding.top
              h: -gridSize * 3
            AppPalette.primary ? :red

          TextElement
            TextStyles.mediumText
            :parentSize
            :textCenterCenter
            color:    TextPalette.white.primary
            text:     title

          if @pageStackIndex > 0
            IconButton
              icon: :back
              color:  TextPalette.white.primary
              action: @models.pageStack.pop

      Element
        padding: bottom: -@safePadding.bottom
        :clip unless @hideTitle
        :column

        ScrollerWithBar
          @props.children

        Element
          size: h: @safePadding.bottom
