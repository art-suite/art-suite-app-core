import &StandardImport

class IconAndText extends ViewStateComponent

  render: ->
    @viewState extract gridSize, buttonSize
    @props extract
      customIcon
      icon
      iconImage
      text
      rightText
      rightIcon
      iconColor
      iconAngle
      iconShadow
      leftPadIcon
      iconScale
      color = TextPalette.black.softPrimary

    haveIcon = icon || customIcon || iconImage

    Element
      :row :childrenCenterLeft
      childrenMargins: gridSize / 2
      padding:
        left: if !leftPadIcon && haveIcon then 0 else gridSize / 2
        right: gridSize / 2

      switch
      when customIcon
        Element
          padding: gridSize / 4
          size: buttonSize
          customIcon

      when iconImage
        Element
          size: buttonSize
          padding: gridSize / 4
          BitmapElement
            :centerCenter
            scale:  iconScale ? 1
            source: iconImage

      when icon
        Element
          size: buttonSize
          Icon
            :centerCenter
            {}
              icon
              iconAngle
              iconScale: iconScale ? 2/3
              shadow: iconShadow
              color: iconColor ? color

      TextElement
        TextStyles.mediumText
        :parentWidthChildrenHeight
        :textCenterLeft
        text:   capitalize text
        color:  color

      rightText? && Element
        :childrenSize
        key: rightText
        animators:
          size: toFrom: w: 0, hch: 1
          clip: toFrom: true

        TextElement
          TextStyles.smallText
          :childrenSize
          text:   rightText
          color:  color

      rightIcon? && Icon
        icon: rightIcon
        iconScale: iconScale ? 2/3
        shadow: iconShadow
        color: iconColor ? color
