import &StandardImport

class Toolbar extends FluxComponent
  @subscriptions
    :appKitViewState.buttonSize
    :appKitViewState.gridSize
    :appKitViewState.wide
    :appKitPresentationState.toolbarHorizontal

  render: ->
    @ extract gridSize, buttonSize, toolbarHorizontal, wide
    Element
      draw: hslColor 0  .5  1

      if wide
        size: hh: 1  wcw: 1

      if toolbarHorizontal
           :row
      else :column

      padding:
        if toolbarHorizontal
              h: gridSize / 2
        else  v: gridSize / 2

      childrenMargins: gridSize / 2
      if wide
        Element
          TextElement
            TextStyles.mediumText
            :childrenWidthParentHeight
            :textCenterCenter
            text: :Logo

      array text in :home :post :search :activity :menu
        if wide
          Element
            draw: :red
            padding: h: gridSize
            :childrenWidthParentHeight
            TextElement
              TextStyles.mediumText
              :childrenWidthParentHeight
              text: text
              :textCenterCenter

        else
          Element
            draw: :red
            padding: v: gridSize / 2
            TextElement
              TextStyles.tinyText
              :childrenSize
              :bottomCenter
              text: text

class App extends FluxComponent
  @subscriptions
    :appKitViewState.appKitViewState

  render: ->
    @appKitViewState extract gridSize

    AppBodyWithToolbar
      background: hslColor 1/2  .5  1

      toolbar: Toolbar()

      ScrollElement
        draw:
          hslColor 1/3  .25  1
          padding: @appKitViewState.safeToSuggestedPaddingDelta
          hslColor 1/6  .1   1

        padding: @appKitViewState.safeToSuggestedPaddingDelta

        Element
          :column
          childrenMargins: @appKitViewState.gridSize

          TextElement
            TextStyles.mediumText
            text:
              """
                AppKitDemo

                With ?fakeNative in the URL, this will preview padding based on the current useragent - such as iPhoneX notches, iOS status bars, etc.

          TextElement
            TextStyles.smallMonospaceText
            padding: @appKitViewState.gridSize
            text:
              formattedInspect @appKitViewState.simpleBrowserInfo
