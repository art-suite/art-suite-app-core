import &StandardImport, &CanvasPathBuilder

{PathsTag, PathTag} = createTagFactories "paths path"

class SvgPathExtractor extends BaseClass

  constructor: ->
    @_paths = [] new IntermediateCanvasPath

  _advancePath: ->
    @_paths.push path = new IntermediateCanvasPath
    path

  advancePathIfPainted: ->
    if @currentPath.painted
      @_advancePath()
    else
      @currentPath

  @getter
    :paths
    currentPath: -> peek @_paths
    drawArea: ->
      out = rect()
      each path in @paths
        path.drawArea.unionInto out
      out

    inspectedObjects: ->
      SvgPathExtractor: currentPath: @currentPath.inspectedObjects

    encoded: ->
      new EncodedPathSet array path in @paths with path.encoded

    xbd: ->
      @encoded.xbd

  extract: (svg) ->
    &canvg
      new Builder @
      svg
      ignoreMouse: true       # ignore mouse events
      ignoreAnimation: true   # ignore animations
      ignoreDimensions: true  # does not try to resize canvas
      ignoreClear: true       # does not clear canvas

    each path in @paths
      path.resolveMatrix()
    @
