import &StandardImport

class PipelineRegistry extends &ArtEvents/ExtendableEventedMixin BaseObject
  @pipelines: global.artEryPipelines = pipelines = {}

  # returns the singleton
  @register: (PipelineClass) ->
    {singleton, _aliases} = PipelineClass

    _aliases && each alias in _aliases
      pipelines[alias] = singleton

    pipeline = pipelines[name = singleton.name] = singleton

    @handleEvent "register", {name, pipeline}
    singleton

  # used for testing
  @_reset: (testFunction = -> true) ->
    each key in Object.keys pipelines
      if testFunction pipelines[key]
        delete pipelines[key]
